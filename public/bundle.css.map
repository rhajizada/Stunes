{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/PlaylistDeck.svelte",
    "../src/LoginCard.svelte",
    "../src/PlaylistCard.svelte",
    "../src/Spinner.svelte"
  ],
  "sourcesContent": [
    "<script>\nexport let token;\nimport {onMount} from 'svelte';\nimport PlaylistCard from './PlaylistCard.svelte';\nimport Spinner from './Spinner.svelte';\n$: playlists = loadPlaylists(token);\n\n\tconst loadPlaylists = async (token) => {\n\t\tlet response = await fetch(`/playlists/${token}`, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t});\n\t\tlet array = response.json();\n\t\tif(response.ok){\n\t\t\treturn array;\n\t\t}\n\t\telse{\n\t\t\tthrow new Error(res.text());\n\t\t}\n\t};\n\n</script>\n\n<style>\n.center{\n    position: absolute;\n    left: 1rem;\n\ttext-align: center;\n  }\n\n</style>\n\n<!-- <button class='btn btn-primary' on:click = {handleClick}>Press me</button> -->\n\n{#await playlists}\n<Spinner />\n{:then array}\n<div class=\"card-columns center\">\n{#each array as element}\n<PlaylistCard playlist={element} />\n{/each}\n</div>\n{:catch error}\n<p class=\"center\">{error}</p>\n{/await}",
    "<script>\nlet loginPage = '/login';\n</script>\n\n<style>\n.center{\n    transform: translate(-50%, -50%);\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    padding: 20px;\n    overflow: auto;\n\ttext-align: center;\n  }\n</style>\n\n<div class=\"card center bg-secondary\">\n  <div class=\"card-header\">\n    Get ready to transfer your Spotify playlists to CSV files\n  </div>\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">First login</h5>\n    <p class=\"card-text\">Login with your Spotify Account</p>\n    <a href={loginPage} class=\"btn btn-primary\">Login</a>\n  </div>\n</div>",
    "<script>\nexport let playlist;\nconst saveCSV = (function () {\n    var a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    return function (csv, filename) {\n        let blob = new Blob([csv], {type: \"text/csv;charset=utf-8;\"});\n        let url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = filename;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    };\n}());\n\nconst download = () => {\n    saveCSV(toCSV(), `${playlist.meta.name}.csv`);\n};\n\nconst toCSV = () => {\n    let csv = 'Title, Artist, Album\\n';\n    for(let track of playlist.tracklist){\n        let title = track.track.name;\n        let album = track.track.album.name;\n        let artistArray = [];\n        for(let artist of track.track.artists){\n            artistArray.push(artist.name)\n        }\n        let artist = artistArray.join(', ');\n        csv += `\"${title}\"; \"${artist}\"; \"${album}\"\\n`;\n    }\n    console.log(csv);\n    return csv;\n};\n\n</script>\n\n<style>\n.card-body {\n    text-align: center\n}\n\n.card {\n    width: 18rem;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    margin-right: 2rem;\n    margin-bottom: 2rem;\n}\n</style>\n\n<div class=\"card\">\n    <img src={playlist.meta.images[0].url} class=\"card-img-top\" alt={playlist.meta.images[0].url}>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{playlist.meta.name}</h5>\n      <p class=\"card-text\">{playlist.meta.tracks.total} tracks</p>\n      <button type=\"button\" class=\"btn btn-success\" on:click={download}>Download</button>\n    </div>\n  </div>",
    "<style>\ndiv {\n    width: 5rem;\n    height: 5rem;\n}\n\n.center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n}\n</style>\n<div class=\"d-flex justify-content-center\">\n<div class=\"spinner-border text-success center\" role=\"status\">\n  <span class=\"sr-only \">Loading...</span>\n</div>\n</div>"
  ],
  "names": [],
  "mappings": "AA0BA,qBAAO,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,AACjB,CAAC;ACzBH,sBAAO,CAAC,AACJ,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACjB,CAAC;AC0BH,UAAU,eAAC,CAAC,AACR,UAAU,CAAE,MAAM;AACtB,CAAC,AAED,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,AACvB,CAAC;AChDD,GAAG,cAAC,CAAC,AACD,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,AACX,CAAC"
}